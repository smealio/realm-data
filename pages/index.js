import {useState} from 'react'
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import Pagination from '../components/shared/pagination'
import {GetRealmStatsAsync,GetRealmsAsync,GetFeatureRarity} from '../components/api/realmData'
import FeatureRarity from '../components/data/realmFeatureRarity'

export async function getStaticProps() {
  const stats = await GetRealmStatsAsync();
  const featureRarity = await GetFeatureRarity();

      return {
        props: {
          stats:stats.stats[0],
          featureRarity:featureRarity,
        },
      };
}

export default function Home({ stats, featureRarity }) {
  const {id,totalRealms,totalCities,totalFarms,totalAquariums,totalResearchLabs,totalCollects,totalStaked} = stats;
  const {feature,total} = featureRarity;

  //no clue

  const [loading, setLoading] = useState(false);
  const [currentPage, setCurrentPage] = useState(1);
  const [postsPerPage] = useState(10);

  // Get current posts
  const indexOfLastPost = currentPage * postsPerPage;
  const indexOfFirstPost = indexOfLastPost - postsPerPage;
  const currentPosts = featureRarity.slice(indexOfFirstPost, indexOfLastPost);

  // Change page
  const paginateFront = () => setCurrentPage(currentPage + 1);
  const paginateBack = () => setCurrentPage(currentPage - 1);

  return (
    <div className={styles.container}>
    <Head>
    <title>Create Next App</title>
    <meta name="description" content="Generated by create next app" />
    <link rel="icon" href="/favicon.ico" />
    </Head>

    <main className={styles.main}>
    <div className="grid grid-cols-4 grid-flow-col gap-4">

    <div>
    <div className={styles.card}>
    <h2>total realms</h2>
    <p>{totalRealms}</p>
    </div>
    </div>

    <div>
    <div className={styles.card}>
    <h2>total realms staked</h2>
    <p>{totalStaked}</p>
    </div>
    </div>

    <div className={styles.card}>
    <h2>Geographic Feature Rarity </h2>
    <FeatureRarity featureRarity={currentPosts} />
          <Pagination
            postsPerPage={postsPerPage}
            totalPosts={featureRarity.length}
            paginateBack={paginateBack}
            paginateFront={paginateFront}
            currentPage={currentPage}
          />
    </div>

    </div>
    </main>

    </div>
  )
}
